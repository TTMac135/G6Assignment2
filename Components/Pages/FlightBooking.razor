@page "/FlightFinder"
@using G6Assignment2.ProblemDomain


<h3>Flight Finder</h3>

<div class="page">
    <form class="form-group-finder">

        <div class="form-group">
            <label for="departureAirport">From:</label>
            <select name="From" id = "departureAirport" @bind="origin">
                <option value="Any">Any</option>
                @foreach (Airport airport in flightManager.AirportObjects)
                {
                    <option value="@airport.AirportId">@airport.AirportName</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="arrivalAirport">To:</label>
            <select name="To" id="arrivalAirport" @bind="destination">
                <option value="Any">Any</option>
                @foreach (Airport airport in flightManager.AirportObjects)
                {
                    <option value="@airport.AirportId">@airport.AirportName</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="day">Day:</label>
            <select name="Day" id = "day" @bind="day">
                <option value="Any">Any</option>
                <option value="Sunday">Sunday</option>
                <option value="Monday">Monday</option>
                <option value="Tuesday">Tuesday</option>
                <option value="Wednesday">Wednesday</option>
                <option value="Thursday">Thursday</option>
                <option value="Friday">Friday</option>
                <option value="Saturday">Saturday</option>
            </select>
        </div>

        <div class="form-group button-container">
            <button type="button" @onclick="FindFlightsButton">Find Flights</button>
        </div>
    </form>

 <h4>Flights</h4>

<div class="scrollable-list">
    <table>
        <tbody>
                @foreach (Flight flight in matchingFlights)
                {
                    string rowClass = "";
                    if (flight == selectedFlight)
                    {
                        rowClass = "selected-row";
                    }
                    <tr class="@rowClass" @onclick="() => SelectFlight(flight)">
                        <td>@flight.ToString()</td>
                    </tr>
                }
        </tbody>
    </table>
</div>

<h3>Reserve</h3>
    <form class="form-group-reserve">
        <label for="reserveFlightCode">Flight Code:</label>
        <input id="reserveFlightCode" type="text" @bind="reserveFlightCode" readonly/>

        <label for="reserveAirline">Airline:</label>
        <input id="reserveAirline" type="text" @bind="reserveAirline" readonly/>

        <label for="reserveDay">Day:</label>
        <input id="reserveDay" type="text" @bind="reserveDay" readonly/>

        <label for="reserveTime">Time:</label>
        <input id="reserveTime" type="text" @bind="reserveTime" readonly />

        <label for="reserveCost">Cost:</label>
        <input id="reserveCost" type="text" @bind="reserveCost" readonly />

        <label for="reserveName">Name:</label>
        <input id="reserveName" type="text" @bind="reserveName"/>

        <label for="reserveCitizenship">Citizenship:</label>
        <input id="reserveCitizenship" type="text" @bind="reserveCitizenship"/>

        <div class="button-container">
            <button type="button" @onclick="() => CreateReservationButton(selectedFlight, reserveName, reserveCitizenship)">Reserve</button>
        </div>
    </form>
</div>


<style>
    h3, h4 {
        text-align: center;
        margin-bottom: 20px;
        margin-top: 20px;
    }

    .page {
        width: 100%;
        height: 100%;
    }

    .form-group-finder {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

        .form-group-finder .form-group {
            width: 25%;
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .form-group-finder .button-group {
            display: flex;
            align-items: flex-end;
            margin-left: 25px;
        }

    select {
        width: 100%;
        padding: 0.5rem;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 1rem;
    }

    .form-group input {
        width: 100%;
    }

    .form-group-reserve label, .form-group-reserve input {
        display: block;
        margin-bottom: 10px;
        width: 100%;
    }

    .button-container {
        text-align: center;
    }

    .scrollable-list {
        max-height: 300px;
        overflow-y: scroll;
        border: 1px solid black;
        padding: 15px;
    }

    .button-container button,
    .button-group button {
        padding: 0.5rem 1rem;
        border-radius: 4px;
        background-color: blue;
        color: white;
        border: none;
        cursor: pointer;
        font-size: 1rem;
    }

    .selected-row {
        background-color: lightblue;
    }
</style>

@code {
    private string origin = "Any";
    private string destination = "Any";
    private string day = "Any";
    private List<Flight> matchingFlights = new List<Flight>();
    private FlightManager flightManager = new FlightManager();
    private ReservationManager reservationManager = new ReservationManager();
    private Flight selectedFlight;
    private string reserveFlightCode;
    private string reserveAirline;
    private string reserveDay;
    private string reserveTime;
    private int reserveCost;
    private string reserveName;
    private string reserveCitizenship;


    //Runs CreateFlights & CreateAirports when page is loaded
    protected override void OnInitialized()
    {
        flightManager.CreateAirports();
        flightManager.CreateFlights();
    }
    //Runs FindFlights when button is clicked
    private void FindFlightsButton()
    {
        matchingFlights = flightManager.findFlights(origin, destination, day);
    }

    // Selects a flight from the list
    private void SelectFlight(Flight flight)
    {
        selectedFlight = flight;
        reserveFlightCode = flight.FlightCode;
        reserveAirline = flight.Airline;
        reserveDay = flight.Day;
        reserveTime = flight.Time;
        reserveCost = flight.Cost;
    }

    private void CreateReservationButton(Flight selectedFlight, string reserveName, string reserveCitizenship)
    {
        // Create a new Reservation object
        try
        {
            reservationManager.MakeReservation(selectedFlight, reserveName, reserveCitizenship);
        }
        catch(InvalidReservation ex) //print error code if exception
        {
            Console.WriteLine(ex.ErrorCode);
        }
    }

    
}
